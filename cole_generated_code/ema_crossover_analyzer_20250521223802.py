from ghost_env import INFURA_KEY, VAULT_ADDRESS
To complete this task, we need to use pandas library in Python to calculate the Exponential Moving Average (EMA) and then analyze the crossover. Here is a simple implementation:

```python
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

def calculate_ema(data, window):
    return data.ewm(span=window, adjust=False).mean()

def ema_crossover_analyzer(data, short_window, long_window):
    # Calculate short and long EMA
    short_ema = calculate_ema(data, short_window)
    long_ema = calculate_ema(data, long_window)

    # Create signals
    signals = np.where(short_ema > long_ema, 1.0, 0.0)

    # Generate trading orders
    orders = np.diff(signals)

    return orders, short_ema, long_ema

# Load some data for testing
data = pd.read_csv('data.csv')  # replace with your data file

# Analyze EMA crossover
orders, short_ema, long_ema = ema_crossover_analyzer(data['Close'], 12, 26)

# Plot
plt.figure(figsize=(12,5))
plt.title('Close Price, Short EMA and Long EMA')
plt.plot(data['Close'], label='Close Price', color = 'blue')
plt.plot(short_ema, label='Short EMA', color='red')
plt.plot(long_ema, label='Long EMA', color='green')
plt.legend(loc='upper left')
plt.show()

# Print orders
print('Trading orders:', orders)
```

This script first calculates the short and long EMA, then it generates signals when the short EMA crosses the long EMA. A signal of 1.0 means the short EMA is above the long EMA (bullish signal), and a signal of 0.0 means the short EMA is below the long EMA (bearish signal). The trading orders are generated by taking the difference of the signals. A positive order means buy and a negative order means sell.

Please replace 'data.csv' with your actual data file and 'Close' with the actual column name for the closing prices in your data. The short and long window sizes are set to 12 and 26, respectively, which are common values used in trading, but you can adjust them according to your needs.