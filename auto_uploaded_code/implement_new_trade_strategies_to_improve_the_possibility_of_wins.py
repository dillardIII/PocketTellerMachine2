Without more specific requirements, it's quite hard to suggest one specific trading strategy. However, I will propose a simple implementation of a Moving Average Crossover Strategy. This strategy involves the use of two moving averages: a fast-moving average (e.g., 15-day MA) and a slow-moving average (e.g., 50-day MA). When the fast MA crosses above the slow MA, it signals a good time to buy, and when the fast MA crosses below the slow MA, it signals a good time to sell.

Here is a very simplified example illustrating the concept using the Pandas library in python:

```python
import pandas as pd
import numpy as np
import yfinance as yf # to fetch financial data

# Fetching price data using yfinance
data = yf.download('AAPL', start='2020-01-01', end='2021-12-31')

# Calculate the 15-day MA
data['15_day_MA'] = data['Close'].rolling(window=15).mean()

# Calculate the 50-day MA
data['50_day_MA'] = data['Close'].rolling(window=50).mean()

# Create a column 'Buy_Signal' where if 15_day_MA > 50_day_MA then True else False
data['Buy_Signal'] = np.where(data['15_day_MA'] > data['50_day_MA'], True, False)

# Create a column 'Sell_Signal' where if 15_day_MA < 50_day_MA then True else False
data['Sell_Signal'] = np.where(data['15_day_MA'] < data['50_day_MA', True, False)

# Print data
print(data)
```

This strategy doesn't consider transaction costs. Also, it's very simplistic, and should definitely not be used for actual trading without a lot more sophistication and testing.

In actual trading, you'd not only want to consider the buy/sell signals generated by such a strategy, but also consider risk management, portfolio optimization, diversification and much more. 

Remember that real trading should only be done based on validated strategies and thorough understanding of the risks involved.