Sure, here is a Python code for a Moving Average Convergence Divergence (MACD) signal scanner. This code assumes that you have a pandas DataFrame `df` with a 'Close' column for closing prices.

```python
import pandas as pd
import numpy as np

def calculate_ema(data, window):
    return data.ewm(span=window, adjust=False).mean()

def calculate_macd(data, short_window, long_window):
    short_ema = calculate_ema(data, short_window)
    long_ema = calculate_ema(data, long_window)
    macd_line = short_ema - long_ema
    signal_line = calculate_ema(macd_line, 9)
    return macd_line, signal_line

def macd_crossover(data):
    macd_line, signal_line = calculate_macd(data, 12, 26)
    return ((macd_line > signal_line) & (macd_line.shift(1) < signal_line.shift(1)))

def macd_crossunder(data):
    macd_line, signal_line = calculate_macd(data, 12, 26)
    return ((macd_line < signal_line) & (macd_line.shift(1) > signal_line.shift(1)))

df['MACD Line'], df['Signal Line'] = calculate_macd(df['Close'], 12, 26)
df['MACD Crossover'] = macd_crossover(df['Close'])
df['MACD Crossunder'] = macd_crossunder(df['Close'])
```

This script first defines helper functions to calculate the Exponential Moving Average (EMA) and the MACD line and signal line. It then adds these as new columns to the DataFrame. The `macd_crossover` and `macd_crossunder` functions return boolean Series indicating where the MACD line crosses over or under the signal line, respectively. These are also added as new columns to the DataFrame.