Sure, here is a simple implementation of a Relative Strength Index (RSI) strategy using Python and the `pandas` library. This strategy will generate buy signals when the RSI is below 30 (oversold) and sell signals when the RSI is above 70 (overbought).

```python
import pandas as pd
import numpy as np

def calculate_rsi(data, window):
    delta = data.diff()
    up, down = delta.copy(), delta.copy()
    up[up < 0] = 0
    down[down > 0] = 0

    average_gain = up.rolling(window=window).mean()
    average_loss = abs(down.rolling(window=window).mean())

    rs = average_gain / average_loss
    rsi = 100 - (100 / (1 + rs))
    return rsi

def generate_rsi_strategy(data, rsi_window=14):
    data['RSI'] = calculate_rsi(data['Close'], rsi_window)
    data['Buy_Signal'] = np.where(data['RSI'] < 30, 1, 0)
    data['Sell_Signal'] = np.where(data['RSI'] > 70, 1, 0)
    return data

# Example usage:
# Assume 'df' is a pandas DataFrame with a 'Close' column for closing prices
df = generate_rsi_strategy(df)
```

This code first defines a helper function `calculate_rsi` to calculate the RSI for a given data series and window length. Then it defines the main function `generate_rsi_strategy` which adds the RSI to the input DataFrame and generates the buy and sell signals based on the RSI values.

Please note that this is a very basic strategy and should not be used for real trading without further improvements and testing.