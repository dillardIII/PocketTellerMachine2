Sure, here is a simple implementation of a Relative Strength Index (RSI) strategy generator using Python and the pandas library. This code assumes you have a pandas DataFrame `df` with a 'Close' column for closing prices.

```python
import pandas as pd
import numpy as np

def calculate_rsi(data, window):
    delta = data.diff()
    up, down = delta.copy(), delta.copy()
    up[up < 0] = 0
    down[down > 0] = 0

    average_gain = up.rolling(window).mean()
    average_loss = abs(down.rolling(window).mean())

    rs = average_gain / average_loss
    rsi = 100 - (100 / (1 + rs))
    return rsi

def rsi_strategy(df, window=14):
    # Calculate RSI
    df['RSI'] = calculate_rsi(df['Close'], window)

    # Create signals
    df['Buy_Signal'] = np.where((df['RSI'] < 30), 1, 0)  # oversold condition
    df['Sell_Signal'] = np.where((df['RSI'] > 70), 1, 0)  # overbought condition

    return df

# Use the function on your DataFrame
df = rsi_strategy(df)
```

This code first calculates the RSI for a given window of days (default is 14). It then generates trading signals based on the RSI: a buy signal when the RSI is below 30 (indicating an oversold condition) and a sell signal when the RSI is above 70 (indicating an overbought condition). The resulting DataFrame will have columns for the RSI, Buy_Signal, and Sell_Signal.